import colors from "colors";
import { get, start } from "prompt";
import { ethers } from "ethers";

// Generated by https://quicktype.io
export interface ConstructorFragment {
  inputs: Input[];
  type: string;
  _isFragment: boolean;
}

export interface Input {
  name: string;
  type: string;
}

export class IOProvider {
  constructor(private readonly printer: any = colors) {}
  private clYellow(text: string) {
    console.log(this.printer.yellow(text));
  }

  async getConstructorParameters(
    contractName: string,
    constructor: ConstructorFragment
  ): Promise<any[]> {
    this.clYellow(
      `THE CONTRACT [ ${contractName} ] REQUIRES THE FOLLOWING CONSTRUCTOR PARAMETERS`
    );

    const constructorParameters = [];

    for (const input of constructor.inputs) {
      console.log(`\n> PARAMETER [ ${input.name} ] OF TYPE [ ${input.type} ]`);
      start(); /*prompt*/
      let { param } = await get(["param"]); /*prompt*/

      constructorParameters.push(param);
    }

    return constructorParameters;
  }
}
